{"name": "Тест: если не передать номер заказа, запрос вернет ошибку", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'code': 404,... 'Not Found.'} == {'code': 404,...е существует'}\n  \n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'message': 'Not Found.'} != {'message': 'Заказа с таким id не существует'}\n  Use -v to get more diff", "trace": "self = <test_assept_order.TestAsseptOrder object at 0x000002002F017230>\n\n    @allure.title('Тест: если не передать номер заказа, запрос вернет ошибку')\n    @allure.description('Генерирую даные курьера, получаю его id. Принимаю заказ курьером, ввожу id курьера и пустой track заказа в query-параметры, проверяю код 404, и тело ответа')\n    def test_assept_order_with_empty_query_parameter_id_order_shows_code_400_conflict(self):\n        create_courier = register_new_courier_and_return_login_password()\n        payload = {\"login\": create_courier[0], \"password\": create_courier[1], \"firstName\": create_courier[2]}\n        resp_log_cour = requests.post(f'{URL}/api/v1/courier/login', data=payload)\n        id_courier = resp_log_cour.json()['id']\n        id_order = ''\n        put_order = requests.put(f'{URL}{self.ENDPOINT}{id_order}?courierId={id_courier}')\n        assert put_order.status_code == 404\n>       assert put_order.json() == {'code': 404, 'message': 'Заказа с таким id не существует'}\nE       AssertionError: assert {'code': 404,... 'Not Found.'} == {'code': 404,...е существует'}\nE         \nE         Omitting 1 identical items, use -vv to show\nE         Differing items:\nE         {'message': 'Not Found.'} != {'message': 'Заказа с таким id не существует'}\nE         Use -v to get more diff\n\ntests\\test_assept_order.py:59: AssertionError"}, "description": "Генерирую даные курьера, получаю его id. Принимаю заказ курьером, ввожу id курьера и пустой track заказа в query-параметры, проверяю код 404, и тело ответа", "attachments": [{"name": "log", "source": "3055160e-544d-4507-a210-8fd8e7a836dd-attachment.txt", "type": "text/plain"}], "start": 1717679523481, "stop": 1717679524530, "uuid": "6e59620f-8f1e-4d04-aa1a-b02f9232afcc", "historyId": "097a691951854c1f25c48b1bf7d5778b", "testCaseId": "097a691951854c1f25c48b1bf7d5778b", "fullName": "tests.test_assept_order.TestAsseptOrder#test_assept_order_with_empty_query_parameter_id_order_shows_code_400_conflict", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_assept_order"}, {"name": "subSuite", "value": "TestAsseptOrder"}, {"name": "host", "value": "DESKTOP-USF6L0H"}, {"name": "thread", "value": "1796-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_assept_order"}]}